<?xml version="1.0"?>
<project
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"
	xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>com.selflearning</groupId>
		<artifactId>SpringLearningParent</artifactId>
		<version>0.0.1-SNAPSHOT</version>
	</parent>
	<groupId>com.demo</groupId>
	<artifactId>graphql</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>graphql</name>
	<url>http://maven.apache.org</url>
	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
	</properties>
	<dependencies>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>3.8.1</version>
			<scope>test</scope>
		</dependency>

		<!-- To build a GraphQL-enabled application, only graphql-java (the GraphQL 
			implementation itself) is strictly required. Still, to make dynamic resolver 
			wiring easy, you’ll also want to use graphql-java-tools, the library inspired 
			by Apollo’s graphql-tools. Additionally, because the goal is to expose the 
			API over the web, you’ll also make use of graphql-java-servlet (a simple 
			helper library containing a ready-made servlet for accepting GraphQL queries) 
			and javax.servlet-api (the servlet specification implementation). -->

		<!-- https://mvnrepository.com/artifact/com.graphql-java/graphql-java -->
		<dependency>
			<groupId>com.graphql-java</groupId>
			<artifactId>graphql-java</artifactId>
			<version>2018-12-21T20-58-21-f24510d</version>
		</dependency>

		<!-- https://mvnrepository.com/artifact/com.graphql-java/graphql-java-tools -->
		<dependency>
			<groupId>com.graphql-java</groupId>
			<artifactId>graphql-java-tools</artifactId>
			<version>5.2.4</version>
		</dependency>

		<!-- https://mvnrepository.com/artifact/com.graphql-java/graphql-java-servlet -->
		<dependency>
			<groupId>com.graphql-java</groupId>
			<artifactId>graphql-java-servlet</artifactId>
			<version>6.1.3</version>
		</dependency>

		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>javax.servlet-api</artifactId>
			<version>4.0.1</version>
			<scope>provided</scope>
		</dependency>
	</dependencies>


	<build>
		<finalName>hackernews</finalName>
		<plugins>
			<plugin>
				<groupId>org.eclipse.jetty</groupId>
				<artifactId>jetty-maven-plugin</artifactId>
				<version>9.4.6.v20170531</version>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.5.1</version>
				<configuration>
					<source>1.8</source>
					<target>1.8</target>
				</configuration>
			</plugin>

			<plugin>
				<artifactId>maven-war-plugin</artifactId>
				<version>3.1.0</version>
			</plugin>
		</plugins>
	</build>
</project>
